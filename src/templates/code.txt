renderHeaderBackgrounds = function() {
  var i;
  $('#header-background ul').html(((function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; 0 <= TOTAL_HEADER_BACKGROUNDS ? _i <= TOTAL_HEADER_BACKGROUNDS : _i >= TOTAL_HEADER_BACKGROUNDS; i = 0 <= TOTAL_HEADER_BACKGROUNDS ? ++_i : --_i) {
      _results.push("<li style='background-image: url(images/header/" + i + ".jpg)'></li>");
    }
    return _results;
  })()).join(''));
  return $('#header-background li').first().show();
};

renderSocialShares = function() {
  var shareUrl;
  shareUrl = "http://2013.artsy.net/" || location.href;
  $.ajax({
    url: "http://api.facebook.com/restserver.php?method=links.getStats&urls[]=" + shareUrl,
    success: function(res) {
      return $('#social-button-facebook-count').html($(res).find('share_count').text() || 0).show();
    }
  });
  window.twitterCountJSONPCallback = function(res) {
    if (res.count == null) {
      return;
    }
    return $('#social-button-twitter-count').html(res.count || 0).show();
  };
  return $.ajax({
    url: "http://urls.api.twitter.com/1/urls/count.json?url=" + shareUrl + "&callback=twitterCountJSONPCallback",
    dataType: 'jsonp'
  });
};

setupIScroll = function() {
  $wrapper.height(viewportHeight);
  myScroll = new IScroll('#wrapper', {
    probeType: 3,
    mouseWheel: true
  });
  myScroll.on('scroll', setScrollTop);
  myScroll.on('scrollEnd', setScrollTop);
  myScroll.on('scroll', onScroll);
  myScroll.on('scrollEnd', onScroll);
  return document.addEventListener('touchmove', (function(e) {
    return e.preventDefault();
  }), false);
};

offset = function($el) {
  var top, _ref, _ref1, _ref2;
  top = -(((_ref = $scroller.offset()) != null ? _ref.top : void 0) - ((_ref1 = $el.offset()) != null ? _ref1.top : void 0));
  return {
    top: top,
    left: (_ref2 = $el.offset()) != null ? _ref2.left : void 0,
    bottom: top + $el.height()
  };
};

onClickHeaderDownArrow = function() {
  myScroll.scrollToElement('#content', 1200, null, null, IScroll.utils.ease.quadratic);
  return false;
};

shareOnFacebook = function(e) {
  var opts, url;
  mixpanel.track("Shared on Facebook");
  opts = "status=1,width=750,height=400,top=249.5,left=1462";
  url = "https://www.facebook.com/sharer/sharer.php?u=" + location.href;
  window.open(url, 'facebook', opts);
  return false;
};

shareOnTwitter = function(e) {
  var $curHeader, opts, text, url;
  mixpanel.track("Shared on Twitter");
  opts = "status=1,width=750,height=400,top=249.5,left=1462";
  $curHeader = $("#foreground li[data-slug='" + (location.hash.replace('#', '')) + "'] h1");
  text = encodeURIComponent($curHeader.text() + ' | ' + $('title').text());
  url = "https://twitter.com/intent/tweet?" + ("original_referer=" + location.href) + ("&text=" + text) + ("&url=" + location.href);
  window.open(url, 'twitter', opts);
  return false;
};

onScroll = function() {
  popLockForeground();
  fadeBetweenForegroundItems();
  fadeOutHeaderImage();
  fadeInFirstForegroundItem();
  return popLockCodeMask();
};

setScrollTop = function() {
  return scrollTop = -(this.y >> 0);
};

fadeBetweenForegroundItems = function() {
  return $backgroundItems.each(function() {
    var $curItem, $nextItem, elBottom, elTop, endPoint, firstMidPoint, index, midPoint, nextTop, percentNextItem, percentPrevItem, startPoint, viewportBottom;
    index = $(this).index();
    $curItem = $foregroundItems.eq(index);
    $nextItem = $foregroundItems.eq(index + 1);
    viewportBottom = scrollTop + viewportHeight;
    elTop = offset($(this)).top;
    elBottom = offset($(this)).bottom;
    nextTop = offset($(this).next()).top;
    startPoint = elBottom + startOffest(viewportHeight);
    endPoint = nextTop + endOffest(viewportHeight);
    midPoint = (endPoint - startPoint) * MID_FADE_PERCENT + startPoint;
    firstMidPoint = midPoint - (viewportHeight * GAP_PERCENT_OF_VIEWPORT) * FADE_GAP_OF_BLACK;
    if (scrollTop > elTop && viewportBottom < elBottom) {
      $foregroundItems.removeClass('foreground-item-active');
      return $curItem.css({
        opacity: 1
      }).addClass('foreground-item-active');
    } else if (viewportBottom > startPoint && viewportBottom < endPoint) {
      percentPrevItem = 1 - (viewportBottom - startPoint) / (firstMidPoint - startPoint);
      percentNextItem = (viewportBottom - midPoint) / (endPoint - midPoint);
      $curItem.css({
        opacity: percentPrevItem
      });
      return $nextItem.css({
        opacity: percentNextItem
      });
    }
  });
};

transitionHeaderBackground = function() {
  $headerLogo.addClass('active');
  return setTimeout(function() {
    return setTimeout(function() {
      var $cur, $next, index, nextIndex;
      index = $($headerBackgrounds.filter(function() {
        return $(this).hasClass('active');
      })[0]).index();
      nextIndex = index + 1 >= TOTAL_HEADER_BACKGROUNDS ? 0 : index + 1;
      $cur = $($headerBackgrounds.eq(index));
      $next = $($headerBackgrounds.eq(nextIndex));
      $cur.removeClass('active');
      $next.addClass('active');
      return transitionHeaderBackground();
    }, 700);
  }, 1000);
};